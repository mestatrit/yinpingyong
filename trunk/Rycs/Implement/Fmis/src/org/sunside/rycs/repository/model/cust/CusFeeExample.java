package org.sunside.rycs.repository.model.cust;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class CusFeeExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public CusFeeExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    protected CusFeeExample(CusFeeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table cus_fee
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List dateList = new ArrayList();
            Iterator iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(((Date)iter.next()).getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andCusIdIsNull() {
            addCriterion("cus_id is null");
            return this;
        }

        public Criteria andCusIdIsNotNull() {
            addCriterion("cus_id is not null");
            return this;
        }

        public Criteria andCusIdEqualTo(Integer value) {
            addCriterion("cus_id =", value, "cusId");
            return this;
        }

        public Criteria andCusIdNotEqualTo(Integer value) {
            addCriterion("cus_id <>", value, "cusId");
            return this;
        }

        public Criteria andCusIdGreaterThan(Integer value) {
            addCriterion("cus_id >", value, "cusId");
            return this;
        }

        public Criteria andCusIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("cus_id >=", value, "cusId");
            return this;
        }

        public Criteria andCusIdLessThan(Integer value) {
            addCriterion("cus_id <", value, "cusId");
            return this;
        }

        public Criteria andCusIdLessThanOrEqualTo(Integer value) {
            addCriterion("cus_id <=", value, "cusId");
            return this;
        }

        public Criteria andCusIdIn(List values) {
            addCriterion("cus_id in", values, "cusId");
            return this;
        }

        public Criteria andCusIdNotIn(List values) {
            addCriterion("cus_id not in", values, "cusId");
            return this;
        }

        public Criteria andCusIdBetween(Integer value1, Integer value2) {
            addCriterion("cus_id between", value1, value2, "cusId");
            return this;
        }

        public Criteria andCusIdNotBetween(Integer value1, Integer value2) {
            addCriterion("cus_id not between", value1, value2, "cusId");
            return this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return this;
        }

        public Criteria andUserIdIn(List values) {
            addCriterion("user_id in", values, "userId");
            return this;
        }

        public Criteria andUserIdNotIn(List values) {
            addCriterion("user_id not in", values, "userId");
            return this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return this;
        }

        public Criteria andCashNameIsNull() {
            addCriterion("cash_name is null");
            return this;
        }

        public Criteria andCashNameIsNotNull() {
            addCriterion("cash_name is not null");
            return this;
        }

        public Criteria andCashNameEqualTo(String value) {
            addCriterion("cash_name =", value, "cashName");
            return this;
        }

        public Criteria andCashNameNotEqualTo(String value) {
            addCriterion("cash_name <>", value, "cashName");
            return this;
        }

        public Criteria andCashNameGreaterThan(String value) {
            addCriterion("cash_name >", value, "cashName");
            return this;
        }

        public Criteria andCashNameGreaterThanOrEqualTo(String value) {
            addCriterion("cash_name >=", value, "cashName");
            return this;
        }

        public Criteria andCashNameLessThan(String value) {
            addCriterion("cash_name <", value, "cashName");
            return this;
        }

        public Criteria andCashNameLessThanOrEqualTo(String value) {
            addCriterion("cash_name <=", value, "cashName");
            return this;
        }

        public Criteria andCashNameLike(String value) {
            addCriterion("cash_name like", value, "cashName");
            return this;
        }

        public Criteria andCashNameNotLike(String value) {
            addCriterion("cash_name not like", value, "cashName");
            return this;
        }

        public Criteria andCashNameIn(List values) {
            addCriterion("cash_name in", values, "cashName");
            return this;
        }

        public Criteria andCashNameNotIn(List values) {
            addCriterion("cash_name not in", values, "cashName");
            return this;
        }

        public Criteria andCashNameBetween(String value1, String value2) {
            addCriterion("cash_name between", value1, value2, "cashName");
            return this;
        }

        public Criteria andCashNameNotBetween(String value1, String value2) {
            addCriterion("cash_name not between", value1, value2, "cashName");
            return this;
        }

        public Criteria andCashDateIsNull() {
            addCriterion("cash_date is null");
            return this;
        }

        public Criteria andCashDateIsNotNull() {
            addCriterion("cash_date is not null");
            return this;
        }

        public Criteria andCashDateEqualTo(Date value) {
            addCriterionForJDBCDate("cash_date =", value, "cashDate");
            return this;
        }

        public Criteria andCashDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("cash_date <>", value, "cashDate");
            return this;
        }

        public Criteria andCashDateGreaterThan(Date value) {
            addCriterionForJDBCDate("cash_date >", value, "cashDate");
            return this;
        }

        public Criteria andCashDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("cash_date >=", value, "cashDate");
            return this;
        }

        public Criteria andCashDateLessThan(Date value) {
            addCriterionForJDBCDate("cash_date <", value, "cashDate");
            return this;
        }

        public Criteria andCashDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("cash_date <=", value, "cashDate");
            return this;
        }

        public Criteria andCashDateIn(List values) {
            addCriterionForJDBCDate("cash_date in", values, "cashDate");
            return this;
        }

        public Criteria andCashDateNotIn(List values) {
            addCriterionForJDBCDate("cash_date not in", values, "cashDate");
            return this;
        }

        public Criteria andCashDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("cash_date between", value1, value2, "cashDate");
            return this;
        }

        public Criteria andCashDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("cash_date not between", value1, value2, "cashDate");
            return this;
        }

        public Criteria andCashAmountIsNull() {
            addCriterion("cash_amount is null");
            return this;
        }

        public Criteria andCashAmountIsNotNull() {
            addCriterion("cash_amount is not null");
            return this;
        }

        public Criteria andCashAmountEqualTo(BigDecimal value) {
            addCriterion("cash_amount =", value, "cashAmount");
            return this;
        }

        public Criteria andCashAmountNotEqualTo(BigDecimal value) {
            addCriterion("cash_amount <>", value, "cashAmount");
            return this;
        }

        public Criteria andCashAmountGreaterThan(BigDecimal value) {
            addCriterion("cash_amount >", value, "cashAmount");
            return this;
        }

        public Criteria andCashAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_amount >=", value, "cashAmount");
            return this;
        }

        public Criteria andCashAmountLessThan(BigDecimal value) {
            addCriterion("cash_amount <", value, "cashAmount");
            return this;
        }

        public Criteria andCashAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_amount <=", value, "cashAmount");
            return this;
        }

        public Criteria andCashAmountIn(List values) {
            addCriterion("cash_amount in", values, "cashAmount");
            return this;
        }

        public Criteria andCashAmountNotIn(List values) {
            addCriterion("cash_amount not in", values, "cashAmount");
            return this;
        }

        public Criteria andCashAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_amount between", value1, value2, "cashAmount");
            return this;
        }

        public Criteria andCashAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_amount not between", value1, value2, "cashAmount");
            return this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return this;
        }

        public Criteria andRemarkIn(List values) {
            addCriterion("remark in", values, "remark");
            return this;
        }

        public Criteria andRemarkNotIn(List values) {
            addCriterion("remark not in", values, "remark");
            return this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return this;
        }
    }
}