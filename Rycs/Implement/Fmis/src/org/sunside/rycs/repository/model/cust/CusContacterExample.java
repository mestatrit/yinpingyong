package org.sunside.rycs.repository.model.cust;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CusContacterExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public CusContacterExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    protected CusContacterExample(CusContacterExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table cus_contacter
     *
     * @ibatorgenerated Thu Sep 20 01:29:51 CST 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andCusIdIsNull() {
            addCriterion("cus_id is null");
            return this;
        }

        public Criteria andCusIdIsNotNull() {
            addCriterion("cus_id is not null");
            return this;
        }

        public Criteria andCusIdEqualTo(Integer value) {
            addCriterion("cus_id =", value, "cusId");
            return this;
        }

        public Criteria andCusIdNotEqualTo(Integer value) {
            addCriterion("cus_id <>", value, "cusId");
            return this;
        }

        public Criteria andCusIdGreaterThan(Integer value) {
            addCriterion("cus_id >", value, "cusId");
            return this;
        }

        public Criteria andCusIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("cus_id >=", value, "cusId");
            return this;
        }

        public Criteria andCusIdLessThan(Integer value) {
            addCriterion("cus_id <", value, "cusId");
            return this;
        }

        public Criteria andCusIdLessThanOrEqualTo(Integer value) {
            addCriterion("cus_id <=", value, "cusId");
            return this;
        }

        public Criteria andCusIdIn(List values) {
            addCriterion("cus_id in", values, "cusId");
            return this;
        }

        public Criteria andCusIdNotIn(List values) {
            addCriterion("cus_id not in", values, "cusId");
            return this;
        }

        public Criteria andCusIdBetween(Integer value1, Integer value2) {
            addCriterion("cus_id between", value1, value2, "cusId");
            return this;
        }

        public Criteria andCusIdNotBetween(Integer value1, Integer value2) {
            addCriterion("cus_id not between", value1, value2, "cusId");
            return this;
        }

        public Criteria andContacterTypeIsNull() {
            addCriterion("contacter_type is null");
            return this;
        }

        public Criteria andContacterTypeIsNotNull() {
            addCriterion("contacter_type is not null");
            return this;
        }

        public Criteria andContacterTypeEqualTo(String value) {
            addCriterion("contacter_type =", value, "contacterType");
            return this;
        }

        public Criteria andContacterTypeNotEqualTo(String value) {
            addCriterion("contacter_type <>", value, "contacterType");
            return this;
        }

        public Criteria andContacterTypeGreaterThan(String value) {
            addCriterion("contacter_type >", value, "contacterType");
            return this;
        }

        public Criteria andContacterTypeGreaterThanOrEqualTo(String value) {
            addCriterion("contacter_type >=", value, "contacterType");
            return this;
        }

        public Criteria andContacterTypeLessThan(String value) {
            addCriterion("contacter_type <", value, "contacterType");
            return this;
        }

        public Criteria andContacterTypeLessThanOrEqualTo(String value) {
            addCriterion("contacter_type <=", value, "contacterType");
            return this;
        }

        public Criteria andContacterTypeLike(String value) {
            addCriterion("contacter_type like", value, "contacterType");
            return this;
        }

        public Criteria andContacterTypeNotLike(String value) {
            addCriterion("contacter_type not like", value, "contacterType");
            return this;
        }

        public Criteria andContacterTypeIn(List values) {
            addCriterion("contacter_type in", values, "contacterType");
            return this;
        }

        public Criteria andContacterTypeNotIn(List values) {
            addCriterion("contacter_type not in", values, "contacterType");
            return this;
        }

        public Criteria andContacterTypeBetween(String value1, String value2) {
            addCriterion("contacter_type between", value1, value2, "contacterType");
            return this;
        }

        public Criteria andContacterTypeNotBetween(String value1, String value2) {
            addCriterion("contacter_type not between", value1, value2, "contacterType");
            return this;
        }

        public Criteria andContacterNameIsNull() {
            addCriterion("contacter_name is null");
            return this;
        }

        public Criteria andContacterNameIsNotNull() {
            addCriterion("contacter_name is not null");
            return this;
        }

        public Criteria andContacterNameEqualTo(String value) {
            addCriterion("contacter_name =", value, "contacterName");
            return this;
        }

        public Criteria andContacterNameNotEqualTo(String value) {
            addCriterion("contacter_name <>", value, "contacterName");
            return this;
        }

        public Criteria andContacterNameGreaterThan(String value) {
            addCriterion("contacter_name >", value, "contacterName");
            return this;
        }

        public Criteria andContacterNameGreaterThanOrEqualTo(String value) {
            addCriterion("contacter_name >=", value, "contacterName");
            return this;
        }

        public Criteria andContacterNameLessThan(String value) {
            addCriterion("contacter_name <", value, "contacterName");
            return this;
        }

        public Criteria andContacterNameLessThanOrEqualTo(String value) {
            addCriterion("contacter_name <=", value, "contacterName");
            return this;
        }

        public Criteria andContacterNameLike(String value) {
            addCriterion("contacter_name like", value, "contacterName");
            return this;
        }

        public Criteria andContacterNameNotLike(String value) {
            addCriterion("contacter_name not like", value, "contacterName");
            return this;
        }

        public Criteria andContacterNameIn(List values) {
            addCriterion("contacter_name in", values, "contacterName");
            return this;
        }

        public Criteria andContacterNameNotIn(List values) {
            addCriterion("contacter_name not in", values, "contacterName");
            return this;
        }

        public Criteria andContacterNameBetween(String value1, String value2) {
            addCriterion("contacter_name between", value1, value2, "contacterName");
            return this;
        }

        public Criteria andContacterNameNotBetween(String value1, String value2) {
            addCriterion("contacter_name not between", value1, value2, "contacterName");
            return this;
        }

        public Criteria andContacterTelIsNull() {
            addCriterion("contacter_tel is null");
            return this;
        }

        public Criteria andContacterTelIsNotNull() {
            addCriterion("contacter_tel is not null");
            return this;
        }

        public Criteria andContacterTelEqualTo(String value) {
            addCriterion("contacter_tel =", value, "contacterTel");
            return this;
        }

        public Criteria andContacterTelNotEqualTo(String value) {
            addCriterion("contacter_tel <>", value, "contacterTel");
            return this;
        }

        public Criteria andContacterTelGreaterThan(String value) {
            addCriterion("contacter_tel >", value, "contacterTel");
            return this;
        }

        public Criteria andContacterTelGreaterThanOrEqualTo(String value) {
            addCriterion("contacter_tel >=", value, "contacterTel");
            return this;
        }

        public Criteria andContacterTelLessThan(String value) {
            addCriterion("contacter_tel <", value, "contacterTel");
            return this;
        }

        public Criteria andContacterTelLessThanOrEqualTo(String value) {
            addCriterion("contacter_tel <=", value, "contacterTel");
            return this;
        }

        public Criteria andContacterTelLike(String value) {
            addCriterion("contacter_tel like", value, "contacterTel");
            return this;
        }

        public Criteria andContacterTelNotLike(String value) {
            addCriterion("contacter_tel not like", value, "contacterTel");
            return this;
        }

        public Criteria andContacterTelIn(List values) {
            addCriterion("contacter_tel in", values, "contacterTel");
            return this;
        }

        public Criteria andContacterTelNotIn(List values) {
            addCriterion("contacter_tel not in", values, "contacterTel");
            return this;
        }

        public Criteria andContacterTelBetween(String value1, String value2) {
            addCriterion("contacter_tel between", value1, value2, "contacterTel");
            return this;
        }

        public Criteria andContacterTelNotBetween(String value1, String value2) {
            addCriterion("contacter_tel not between", value1, value2, "contacterTel");
            return this;
        }
    }
}