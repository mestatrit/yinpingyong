一、Spring的核心
1、Spring之旅
2、基本Bean装配
	2.1、容纳Spring
		1、BeanFactory->AppliactionContext
		2、ClassPathXmlAppliationContext
		3、FileSystemXmlAppliationContext
			...
	2.2、创建Bean
	2.3、注入Bean
		1、单一属性注入（构造、setter）
		2、集合注入（list\set\map\property）
	2.4、自动注入
		1、基于Name\基于Type
	2.5、控制Bean
		1、Bean的范围（单例、每次创建新实例）
		2、Bean的初始化和销毁
	2.6、总结
3、高级Bean装配
	3.1、父子Bean
	3.2、方法注入
	...
4、通知Bean
	4.1、AOP简介
		1、通知（Advice）:切面的功能被称为通知，其定义了切面是做什么，何时去做(What\When（前、后、异常、围绕）)
		2、连接点（JoinPoint）：可以被切面插入的功能点
		3、切入点（CutPoint）：切面织入的点，叫做切入点，其指出了切面在哪里切入交叉事务(Where)
		4、通知者（Advisor）:用于关联通知和切入点，组件一个真正的切面
		5、切面（Aspect）：由通知和切入点组成，一个概念上的含义
		6、目标（Target）:需要Aop功能的对象，在利用ProxyBeanFactory创建其的时候，会给其添加AOP(交叉事务)功能
		7、代理（Proxy）：在目标对象添加通知之后的创建的新对象
		8、引入（Introduce）
		9、织入（Waver）：吧代理对象添加到目标对象的过程就是织入
	4.2、创建典型的Spring切面
		1、定义通知、配置切入点、配置通知者
		2、基于注解的方式，定义切面
	4.3、自动代理
		1、在创建bean的时候，自动创建AOP切面
	4.4、定义纯粹的POJO切面
		1、使用配置文件的方式，将一个纯粹的POJO变成切面
	4.5、注入AspectJ切面
		1、定义更加强大的切面
	4.6、总结
		创建切面的三种方式：
		1、典型的方式：定义POJO，实现通知相关接口，变成切面
		2、使用注解方式，将一个POJO转成一个切面
		3、使用配置（<aop:config>标签）将POJO转成一个切面
		自动代理，大大简化的AOP的配置，在创建Bean的时候，通过自动代理，寻找符合切入点的切面，实现AOP的自动代理。
二、企业Spring
三、Spring客户端

总结：
1、DI实现对象之间的解耦
2、AOP实现交叉事物和对象的解耦
3、IOC负责Bean的创建、管理等